import telebot
from telebot.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, BotCommand
import os
import json
import pyjokes
import random
from prettytable import PrettyTable

#Specify your token here#
TOKEN = ''

bot = telebot.TeleBot(TOKEN)
bot.set_my_commands(
        commands=[
            BotCommand('/games', '–ó—ñ–≥—Ä–∞—Ç–∏ —É –≥—Ä—É'),
            BotCommand('/jokes', '–ê–Ω–µ–∫–¥–æ—Ç–∏/–¶—ñ–∫–∞–≤—ñ —ñ—Å—Ç–æ—Ä—ñ—ó'),
            BotCommand('/advice', '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó —Ñ—ñ–ª—å–º—ñ–≤/–º—É–∑–∏–∫–∏')
        ])
 
FUN_HISTORY_PATH = os.path.join(os.path.abspath(__file__ + '/..'), 'fun_histrory.json')

try:
    with open(FUN_HISTORY_PATH, 'r' ) as f:
        fun_histrory = json.load(f)
except:
    fun_histrory = None

@bot.message_handler(commands=['start'])
def start(message: Message):
    text = "–í—ñ—Ç–∞—é –≤ —Ä–æ–∑–≤–∞–∂–∞–ª—å–Ω–æ–º—É —á–∞—Ç-–±–æ—Ç—ñ!\n\n"
    text += "/games - –ó—ñ–≥—Ä–∞—Ç–∏ —É –≥—Ä—É\n"
    text += "/jokes - –ê–Ω–µ–∫–¥–æ—Ç–∏/–¶—ñ–∫–∞–≤—ñ —ñ—Å—Ç–æ—Ä—ñ—ó\n"
    text += "/advice - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó —Ñ—ñ–ª—å–º—ñ–≤/–º—É–∑–∏–∫–∏/—ñ–≥–æ—Ä\n"
    bot.send_message(message.chat.id, text)

@bot.message_handler(commands=['jokes'])
def jokes(message: Message):
    keyboard = InlineKeyboardMarkup(row_width=2)
    button1 = InlineKeyboardButton(text="–ê–Ω–µ–∫–¥–æ—Ç üòÅ", callback_data="joke")
    button2 = InlineKeyboardButton(text="–¶—ñ–∫–∞–≤–∞ —ñ—Å—Ç–æ—Ä—ñ—è ü§ì", callback_data="history")
    keyboard.add(button1,button2)
    bot.send_message(message.chat.id, "–û–±–µ—Ä–∏ –¥—ñ—é: üëá", reply_markup=keyboard)

@bot.message_handler(commands=['games'])
def games(message: Message):
    keyboard = InlineKeyboardMarkup(row_width=2)
    button1 = InlineKeyboardButton(text="–ö–∞–º—ñ–Ω—å –ù–æ–∂–∏—Ü—ñ –ü–∞–ø—ñ—Ä üôÉ", callback_data="rps")
    button2 = InlineKeyboardButton(text="–í–≥–∞–¥–∞–π —á–∏—Å–ª–æ ü§î", callback_data="guess_number")
    keyboard.add(button1,button2)
    bot.send_message(message.chat.id, "–û–±–µ—Ä–∏ –≥—Ä—É: üëá", reply_markup=keyboard)

@bot.message_handler(commands=['advice'])
def advice(message: Message):
    keyboard = InlineKeyboardMarkup(row_width=2)
    button1 = InlineKeyboardButton(text="–§—ñ–ª—å–º–∏ üé¨", callback_data="r_movie")
    button2 = InlineKeyboardButton(text="–ú—É–∑–∏–∫–∞ üé∏", callback_data="r_music")
    keyboard.add(button1,button2)
    bot.send_message(message.chat.id, "–û–±–µ—Ä–∏ –Ω–∞–ø—Ä—è–º–æ–∫: üëá", reply_markup=keyboard)

def rps(message: Message):
    bot.send_message(message.chat.id, '–ì—Ä–∞ "–ö–∞–º—ñ–Ω—å –ù–æ–∂–∏—Ü—ñ –ü–∞–ø—ñ—Ä"')   
    keyboard = InlineKeyboardMarkup(row_width=2)
    button1 = InlineKeyboardButton(text="–ö–∞–º—ñ–Ω—å ü™®", callback_data="rock")
    button2 = InlineKeyboardButton(text="–ù–æ–∂–∏—Ü—ñ üóí", callback_data="scissors")
    button3 = InlineKeyboardButton(text="–ü–∞–ø—ñ—Ä ‚úÇ", callback_data="paper")
    keyboard.add(button1,button2, button3)
    bot.send_message(message.chat.id, "–û–±–µ—Ä–∏: –∫–∞–º—ñ–Ω—å, –Ω–æ–∂–∏—Ü—ñ –∞–±–æ –ø–∞–ø—ñ—Ä: üëá", reply_markup=keyboard)
    
def guess_number(message: Message):
    bot.send_message(message.chat.id, '–ì—Ä–∞ "–í–≥–∞–¥–∞–π —á–∏—Å–ª–æ"')  
    keyboard = InlineKeyboardMarkup(row_width=5)
    button1 = InlineKeyboardButton(text="1Ô∏è‚É£", callback_data="1")
    button2 = InlineKeyboardButton(text="2Ô∏è‚É£", callback_data="2")
    button3 = InlineKeyboardButton(text="3Ô∏è‚É£", callback_data="3")
    button4 = InlineKeyboardButton(text="4Ô∏è‚É£", callback_data="4")
    button5 = InlineKeyboardButton(text="5Ô∏è‚É£", callback_data="5")
    keyboard.add(button1,button2, button3, button4, button5)
    bot.send_message(message.chat.id, "–û–±–µ—Ä–∏ —á–∏—Å–ª–æ: üëá", reply_markup=keyboard)

def play_again(message: Message, game_type: str):
    keyboard = InlineKeyboardMarkup(row_width=2)
    button1 = InlineKeyboardButton(text="–¢–∞–∫ ‚úÖ", callback_data=game_type)
    button2 = InlineKeyboardButton(text="–í–∏–±—Ä–∞—Ç–∏ –≥—Ä—É üé≤", callback_data="games")
    keyboard.add(button1,button2)
    bot.send_message(message.chat.id, "–ó—ñ–≥—Ä–∞—Ç–∏ —â–µ —Ä–∞–∑? üòÅ", reply_markup=keyboard)

def recommend_movies(message: Message):
    table = PrettyTable()
    table.field_names = ["–§—ñ–ª—å–º", "–ñ–∞–Ω—Ä", "–†—ñ–∫"]
    table.add_row(["–Ü–Ω—Ç–µ—Ä—Å—Ç–µ–ª–ª–∞—Ä", "–ù–∞—É–∫–æ–≤–∞ —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", "2014"])
    table.add_row(["–ù–µ–≤–∏–¥–∏–º–∏–π –≥—ñ—Å—Ç—å", "–¢—Ä–∏–ª–µ—Ä", "2016"])
    table.add_row(["–ì—Ä–∞ –≤ —ñ–º—ñ—Ç–∞—Ü—ñ—é", "–ë—ñ–æ–≥—Ä–∞—Ñ—ñ—è, –î—Ä–∞–º–∞", "2014"])
    bot.send_message(message.chat.id, "–û—Å—å –¥–µ–∫—ñ–ª—å–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∏—Ö —Ñ—ñ–ª—å–º—ñ–≤: üëá")
    for row in table:
        bot.send_message(message.chat.id, f"{row.get_string()}")

def recommend_music(message: Message):
    table = PrettyTable()
    table.field_names = ["–ö–æ–º–ø–æ–∑–∏—Ü—ñ—è", "–í–∏–∫–æ–Ω–∞–≤–µ—Ü—å", "–†—ñ–∫"]
    table.add_row(["Thunder", "Imagine Dragons", "2017"])
    table.add_row(["Nothing Else Matters", "Metallica", "1991"])
    table.add_row(["Back to Black", "Amy Winehouse ", "2006"])
    bot.send_message(message.chat.id, "–û—Å—å –¥–µ–∫—ñ–ª—å–∫–∞ –º—É–∑–∏—á–Ω–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π: üëá")
    for row in table:
        bot.send_message(message.chat.id, f"{row.get_string()}")

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.message:
        if call.data == "joke":
            bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
            joke = pyjokes.get_joke(language="ru", category="neutral")
            bot.send_message(call.message.chat.id, f"<b> {joke} </b>", parse_mode='HTML')
        elif call.data == "history":
            bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
            if fun_histrory:
                history = (random.randint(0,len(fun_histrory)-1))
                bot.send_message(call.message.chat.id, f"{fun_histrory[history]}", parse_mode='HTML')
            else:
                bot.send_message(call.message.chat.id, "–ù–∞ –∂–∞–ª—å –∑–∞—Ä–∞–∑ –Ω–µ–º–∞—î —ñ—Å—Ç–æ—Ä—ñ–π, —Å–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ", parse_mode='HTML')
        elif call.data == "rps":
            bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
            rps(call.message)
        elif call.data == "guess_number":
            bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
            guess_number(call.message)
        elif call.data in ("rock", "scissors", "paper"):
            bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
            options = ['–ö–∞–º—ñ–Ω—å ü™®', '–ù–æ–∂–∏—Ü—ñ üóí', '–ü–∞–ø—ñ—Ä ‚úÇ']
            computer_choice = random.choice(options)            
            match call.data:
                case "rock" : user_choice = "–ö–∞–º—ñ–Ω—å ü™®"
                case "scissors" : user_choice = "–ù–æ–∂–∏—Ü—ñ üóí"
                case "paper" : user_choice = "–ü–∞–ø—ñ—Ä ‚úÇ"
            bot.send_message(call.message.chat.id, f"–¢–∏ –≤–∏–±—Ä–∞–≤: {user_choice}")   
            bot.send_message(call.message.chat.id, f"–ö–æ–º–ø'—é—Ç–µ—Ä –æ–±—Ä–∞–≤: {computer_choice}")
            if user_choice == computer_choice:
                bot.send_message(call.message.chat.id, "–ù—ñ—á–∏—è! ü§ù")
            elif (user_choice == '–ö–∞–º—ñ–Ω—å' and computer_choice == '–ù–æ–∂–∏—Ü—ñ') or \
                (user_choice == '–ù–æ–∂–∏—Ü—ñ' and computer_choice == '–ü–∞–ø—ñ—Ä') or \
                (user_choice == '–ü–∞–ø—ñ—Ä' and computer_choice == '–ö–∞–º—ñ–Ω—å'):
                bot.send_message(call.message.chat.id, "–¢–∏ –ø–µ—Ä–µ–º—ñ–≥! ‚úå")
            else:
                bot.send_message(call.message.chat.id, "–¢–∏ –ø—Ä–æ–≥—Ä–∞–≤! üòî")
            play_again(call.message, "rps")            
        elif call.data in ("1", "2", "3", "4", "5"):
            bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
            user_choice = int(call.data)
            computer_choice = random.randint(1, 5)          
            bot.send_message(call.message.chat.id, f"–¢–∏ –≤–∏–±—Ä–∞–≤: {user_choice}")   
            bot.send_message(call.message.chat.id, f"–ö–æ–º–ø'—é—Ç–µ—Ä –æ–±—Ä–∞–≤: {computer_choice}")
            if user_choice == computer_choice:
                bot.send_message(call.message.chat.id, "–¢–∏ –≤–≥–∞–¥–∞–≤, –≤—ñ—Ç–∞—é! ‚úå")
            else:
                bot.send_message(call.message.chat.id, "–¢–∏ –Ω–µ –≤–≥–∞–¥–∞–≤, —Å–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑ üòî")
            play_again(call.message, "guess_number")
        elif call.data == "games":
            bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
            games(call.message)
        elif call.data == "r_movie":
            bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
            recommend_movies(call.message)
        elif call.data == "r_music":
            bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
            recommend_music(call.message)
        
bot.infinity_polling()